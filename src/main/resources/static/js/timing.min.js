(function() {
	var n = 1;
	var r = "//show.bilibili.com/api/bm/metrics/monitor?";
	window._bm_ = window.performanceLog = {
		setSource: function(e) {
			n = e || 1
		},
		getSource: function() {
			return n
		},
		setApi: function(e) {
			if(e) {
				r = e
			}
		},
		warning: function(e, t, n, r) {
			u([{
				level: "warning",
				errno: e,
				url: n,
				message: t,
				logtype: 1,
				traceid: r
			}])
		},
		error: function(e, t, n, r) {
			u([{
				level: "error",
				errno: e,
				url: n,
				message: t,
				logtype: 1,
				traceid: r
			}])
		}
	};
	var e = XMLHttpRequest.prototype;
	var i = e.send;
	e.send = function() {
		var r = this;
		var a = (new Date).getTime();
		var e = function() {
			try {
				if(r.readyState === 4) {
					var e = r.status;
					if(f(r.responseURL)) {
						var t = r.getResponseHeader("Trace-Id");
						if(e > 399) {
							window._bm_.error(e, r.statusText, r.responseURL, t)
						} else {
							var n = (new Date).getTime();
							u(l(r.responseURL, e, n - a, t))
						}
					}
				}
			} catch(e) {}
		};
		if(typeof r.onreadystatechange === "function") {
			var t = r.onreadystatechange;
			r.onreadystatechange = function() {
				e.apply(null, arguments);
				t.apply(this, arguments)
			}
		} else {
			r.onreadystatechange = e
		}
		i.apply(this, arguments)
	};

	function t() {
		if(!("fetch" in window)) {
			return false
		}
		try {
			new Headers;
			new Request("");
			new Response;
			return true
		} catch(e) {
			return false
		}
	}
	if(t()) {
		var o = window.fetch;
		window.fetch = function() {
			var a = (new Date).getTime();
			return o.apply(this, arguments).then(function(e) {
				try {
					var t = e.status;
					if(f(e.url)) {
						var n = e.headers.get("Trace-Id");
						if(t > 399) {
							window._bm_.error(t, e.statusText, e.url, n)
						} else {
							var r = (new Date).getTime();
							u(l(e.url, t, r - a, n))
						}
					}
				} catch(e) {}
				return e
			})
		}
	}
	var c = function(e) {
		var t = null;
		var n = null;
		var r = null;
		e.forEach(function(e) {
			if(e.entryType === "paint" && e.name === "first-paint") {
				n = Math.floor(e.startTime)
			}
			if(e.entryType === "paint" && e.name === "first-contentful-paint") {
				r = Math.floor(e.startTime)
			}
		});
		if(n && r) {
			t = {};
			t.firstPaint = n;
			t.firstContentfulPaint = r
		}
		return t
	};
	var f = function(e) {
		var t = e !== "";
		t = t && e.indexOf("cm.bilibili.com") === -1;
		t = t && e.indexOf("data.bilibili.com") === -1;
		t = t && e.indexOf("sentry.io") === -1;
		return t
	};
	var s = function(e) {
		var t = [];
		e.forEach(function(e) {
			if(e.initiatorType === "xmlhttprequest" && f(e.name)) {
				t.push({
					level: "info",
					logtype: 1,
					url: e.name.replace(/\?.*/, "").replace(/detail\/\d*/, "detail"),
					cost: Math.floor(e.duration)
				})
			}
		});
		return t
	};
	var l = function(e, t, n, r) {
		return [{
			level: "info",
			logtype: 1,
			url: e.replace(/\?.*/, "").replace(/detail\/\d*/, "detail"),
			status: t,
			cost: n,
			traceid: r
		}]
	};
	var u = function(e) {
		var t = new Image;
		t.src = r + "source=" + n + "&log=" + encodeURIComponent(JSON.stringify(e))
	};
	window.addEventListener("load", function() {
		try {
			if(performance && performance.timing && performance.timing.navigationStart) {
				setTimeout(function() {
					var e = ["navigationStart", "redirectStart", "redirectEnd", "fetchStart", "domainLookupStart", "domainLookupEnd", "connectStart", "secureConnectionStart", "connectEnd", "requestStart", "responseStart", "responseEnd", "domLoading", "domInteractive", "domContentLoadedEventStart", "domContentLoadedEventEnd", "domComplete", "loadEventStart", "loadEventEnd"];
					var r = {
						level: "info",
						logtype: 2,
						url: window.location.origin + window.location.pathname
					};
					e.forEach(function(e) {
						var t = performance.timing.navigationStart;
						var n = performance.timing[e] - t;
						r[e] = n < 0 ? 0 : n
					});
					var t = [];
					if(typeof performance.getEntries === "function") {
						var n = performance.getEntries();
						var a = c(n);
						if(a) {
							r.firstPaint = a.firstPaint;
							r.firstContentfulPaint = a.firstContentfulPaint
						}
						t = s(n)
					}
					u([r]);
					u(t)
				}, 1e3)
			}
		} catch(e) {
			console.log(e)
		}
	})
})();